#### black ####################################################################
["pyproject.toml".tool.black]
skip-magic-trailing-comma = true

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/psf/black"

[[".pre-commit-config.yaml".repos.hooks]]
id = "black"

[[".pre-commit-config.yaml".repos.hooks]]
id = "black-jupyter"

#### coverage #################################################################
["pyproject.toml".tool.coverage.run]
branch = true
data_file = ".coverage/data"
parallel = true

["pyproject.toml".tool.coverage.report]
exclude_lines = ["# pragma: no cover", "@overload"]
fail_under = 100.0
skip_covered = true
skip_empty = true

["pyproject.toml".tool.coverage.html]
directory = ".coverage/html"

#### files ####################################################################
[nitpick.files.present]
"pyproject.toml" = ""

[nitpick.files.absent]
".bump2version.cfg" = ""
".flake8" = ""
".isort.cfg" = ""
"MANIFEST.in" = ""
"package.json" = ""
"setup.cfg" = ""
"setup.py" = ""

#### hatch ####################################################################
["pyproject.toml".build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

["pyproject.toml".tool.hatch.build]
sources = ["src"]

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/dycw/pre-commit-hooks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "run-hatch-version"

#### nitpick ##################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/andreoliwa/nitpick"

[[".pre-commit-config.yaml".repos.hooks]]
id = "nitpick-check"

#### project ##################################################################
["pyproject.toml".project]
dynamic = ["version"]
readme = "README.md"

#### pre-commit hooks #########################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pre-commit/pre-commit-hooks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-executables-have-shebangs"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-merge-conflict"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-shebang-scripts-are-executable"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-symlinks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "destroyed-symlinks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "detect-private-key"

[[".pre-commit-config.yaml".repos.hooks]]
id = "end-of-file-fixer"

[[".pre-commit-config.yaml".repos.hooks]]
id = "mixed-line-ending"
args = ["--fix=lf"]

[[".pre-commit-config.yaml".repos.hooks]]
id = "no-commit-to-branch"

[[".pre-commit-config.yaml".repos.hooks]]
id = "trailing-whitespace"

#### prettier #################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pre-commit/mirrors-prettier"

[[".pre-commit-config.yaml".repos.hooks]]
id = "prettier"

#### pyright ##################################################################
["pyproject.toml".tool.pyright]
include = ["src"]
exclude = ["**/__pycache__", ".direnv", ".git", ".venv"]
executionEnvironments = [{ root = "src" }]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportPrivateImportUsage = false
reportMissingTypeArgument = false
reportPrivateUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUntypedBaseClass = false
reportImplicitOverride = "error"
reportImportCycles = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

[[".pre-commit-config.yaml".repos]]
repo = "local"

[[".pre-commit-config.yaml".repos.hooks]]
id = "pyright"
name = "pyright"
entry = "pyright"
language = "system"
types = ["python"]

#### pytest ###################################################################
["pyproject.toml".tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--color=auto",
  "--cov-config=pyproject.toml",
  "--cov-report=html",
  "--strict-markers",
  "--tb=native"
]
filterwarnings = ["error"]
minversion = "7.0"
testpaths = ["src/tests"]
xfail_strict = true

#### ruff #####################################################################
["pyproject.toml".tool.ruff]
ignore = [
  "ANN101", # flake8-annotations, missing-type-self
  "ANN102", # flake8-annotations, missing-type-cls
  "ANN401", # flake8-annotations, dynamically-typed-expression
  "B008", # flake8-bugbear, function-call-argument-default
  "COM812", # flake8-commas, trailing-comma-missing
  "PGH003", # pygrep-hooks, blanket-type-ignore
  "PLR0913", # refactor, too-many-arguments
  "PT012", # flake8-pytest-style, raises-with-multiple-statements
  "PT013", # flake8-pytest-style, incorrect-pytest-import

]
select = [
    "A", # flake8-builtins
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B", # flake8-bugbear
    "BLE", # flake8-blind-excpt
    "C4", # flake8-comprehensions
    "E,W", # pycodestyle
    "EM", # flake8-errmsg
    "ERA", # eradicate
    "EXE", # flake8-executable
    "F", # pyflakes
    "FA", # flake8-future-annotations
    "FBT", # flake8-boolean-trap
    "FIX", # flake8-fixme
    "FLY", # flynt
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "INT", # flake8-gettext
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TD", # flake8-todos
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "YTT", # flake8-2020
]
src = ["src", "tests"]

["pyproject.toml".tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

["pyproject.toml".tool.ruff.per-file-ignores]
"src/tests/**/*.py" = [
  "FBT001", # flake8-boolean-trap, boolean-positional-arg-in-function-definition
  "FBT003", # flake8-boolean-trap, boolean-positional-value-in-function-call
  "PLR2004", # refactor, magic-value-comparison
  "S101", # flake8-bandit, assert-used

]

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/charliermarsh/ruff-pre-commit"

[[".pre-commit-config.yaml".repos.hooks]]
id = "ruff"
args = ["--fix"]

#### shellcheck ###############################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/shellcheck-py/shellcheck-py"

[[".pre-commit-config.yaml".repos.hooks]]
id = "shellcheck"
