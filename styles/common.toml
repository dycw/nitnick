#### black ####################################################################
["pyproject.toml".tool.black]
skip-magic-trailing-comma = true

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/psf/black"

[[".pre-commit-config.yaml".repos.hooks]]
id = "black"

[[".pre-commit-config.yaml".repos.hooks]]
id = "black-jupyter"

#### coverage #################################################################
["pyproject.toml".tool.coverage.run]
branch = true
data_file = ".coverage/data"
parallel = true

["pyproject.toml".tool.coverage.report]
exclude_lines = ["# pragma: no cover", "@overload"]
fail_under = 100.0
skip_covered = true
skip_empty = true

["pyproject.toml".tool.coverage.html]
directory = ".coverage/html"

#### files ####################################################################
[nitpick.files.present]
"pyproject.toml" = ""

[nitpick.files.absent]
".bump2version.cfg" = ""
".flake8" = ""
".isort.cfg" = ""
"MANIFEST.in" = ""
"package.json" = ""
"setup.cfg" = ""
"setup.py" = ""

#### hatch ####################################################################
["pyproject.toml".build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

["pyproject.toml".tool.hatch.build]
sources = ["src"]

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/dycw/pre-commit-hooks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "run-hatch-version"

#### nitpick ##################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/andreoliwa/nitpick"

[[".pre-commit-config.yaml".repos.hooks]]
id = "nitpick-check"

#### project ##################################################################
["pyproject.toml".project]
dynamic = ["version"]
readme = "README.md"

#### pre-commit hooks #########################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pre-commit/pre-commit-hooks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-executables-have-shebangs"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-merge-conflict"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-shebang-scripts-are-executable"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-symlinks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "destroyed-symlinks"

[[".pre-commit-config.yaml".repos.hooks]]
id = "detect-private-key"

[[".pre-commit-config.yaml".repos.hooks]]
id = "end-of-file-fixer"

[[".pre-commit-config.yaml".repos.hooks]]
id = "mixed-line-ending"
args = ["--fix=lf"]

[[".pre-commit-config.yaml".repos.hooks]]
id = "no-commit-to-branch"

[[".pre-commit-config.yaml".repos.hooks]]
id = "trailing-whitespace"

#### prettier #################################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pre-commit/mirrors-prettier"

[[".pre-commit-config.yaml".repos.hooks]]
id = "prettier"

#### pyright ##################################################################
["pyproject.toml".tool.pyright]
include = ["src"]
exclude = ["**/__pycache__", ".direnv", ".git", ".venv"]
executionEnvironments = [{ root = "src" }]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportIncompatibleMethodOverride = false
reportMissingTypeArgument = false
reportPrivateUsage = false
reportPrivateImportUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUntypedBaseClass = false
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

[[".pre-commit-config.yaml".repos]]
repo = "local"

[[".pre-commit-config.yaml".repos.hooks]]
id = "pyright"
name = "pyright"
entry = "pyright"
language = "system"
types = ["python"]

#### pytest ###################################################################
["pyproject.toml".tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--color=auto",
  "--cov-config=pyproject.toml",
  "--cov-report=html",
  "--strict-markers",
  "--tb=native"
]
filterwarnings = ["error"]
minversion = "7.0"
testpaths = ["src/tests"]
xfail_strict = true

#### ruff #####################################################################
["pyproject.toml".tool.ruff]
ignore = [
  "ANN101", # flake8-annotations, missing-type-self
  "ANN102", # flake8-annotations, missing-type-cls
  "ANN401", # flake8-annotations, dynamically-typed-expression
  "B008", # flake8-bugbear, function-call-argument-default
  "COM812", # flake8-commas, trailing-comma-missing
  "D", # pydocstyle
  "PD", # pandas-vet
  "PLR0913", # refactor, too-many-arguments
  "PT012", # flake8-pytest-style, raises-with-multiple-statements
  "PT013", # flake8-pytest-style, incorrect-pytest-import
  "TCH001", # flake8-type-checking, typing-only-first-party-import
  "TCH002", # flake8-type-checking, typing-only-third-party-import
  "TCH003", # flake8-type-checking, typing-only-standard-library-import
  "TRY200", # tryceratops, reraise-no-cause
  "TRY301", # tryceratops, raise-within-try

]
select = ["ALL"]
src = ["src", "tests"]
target-version = "py39"

["pyproject.toml".tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

["pyproject.toml".tool.ruff.isort]
force-single-line = false

["pyproject.toml".tool.ruff.per-file-ignores]
"src/tests/**/*.py" = [
  "FBT001", # flake8-boolean-trap, boolean-positional-arg-in-function-definition
  "FBT003", # flake8-boolean-trap, boolean-positional-value-in-function-call
  "PLR2004", # refactor, magic-value-comparison
  "S101", # flake8-bandit, assert-used

]

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/charliermarsh/ruff-pre-commit"

[[".pre-commit-config.yaml".repos.hooks]]
id = "ruff"
args = ["--fix"]

#### shellcheck ###############################################################
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/shellcheck-py/shellcheck-py"

[[".pre-commit-config.yaml".repos.hooks]]
id = "shellcheck"
